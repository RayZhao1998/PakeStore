import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

interface PakeItem {
  name_linux: string;
  name_mac: string;
  name_zh: string;
}

const items: PakeItem[] = [
  {
    name_linux: "twitter",
    name_mac: "Twitter",
    name_zh: "推特",
  },
  {
    name_linux: "youtube",
    name_mac: "YouTube",
    name_zh: "YouTube",
  },
  {
    name_linux: "reference",
    name_mac: "Reference",
    name_zh: "Reference",
  },
  {
    name_linux: "code",
    name_mac: "Code",
    name_zh: "Code",
  },
  {
    name_linux: "yuque",
    name_mac: "YuQue",
    name_zh: "语雀",
  },
  {
    name_linux: "chatgpt",
    name_mac: "ChatGPT",
    name_zh: "ChatGPT",
  },
  {
    name_linux: "flomo",
    name_mac: "Flomo",
    name_zh: "浮墨",
  },
  {
    name_linux: "qwerty",
    name_mac: "Qwerty",
    name_zh: "Qwerty",
  },
  {
    name_linux: "zlibrary",
    name_mac: "ZLibrary",
    name_zh: "ZLibrary",
  },
  {
    name_linux: "lizhi",
    name_mac: "LiZhi",
    name_zh: "李志",
  },
  {
    name_linux: "weread",
    name_mac: "WeRead",
    name_zh: "微信阅读",
  },
];

export default function Home() {
  const [os, setOS] = useState("");
  useEffect(() => {
    setOS(getOS());
  }, []);
  return (
    <>
      <Head>
        <title>Pake Store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          href="https://github.com/tw93/Pake/raw/master/src-tauri/png/icon_32.ico"
        />
      </Head>
      <main className="w-full container flex flex-col items-center mx-auto">
        <div className="flex w-full py-3 items-centers justify-between px-4">
          <div className="flex space-x-2 items-center text-lg">
            <img
              src="https://github.com/tw93/Pake/raw/master/src-tauri/png/icon_512.png"
              className="w-8 h-8"
            />
            <span>Pake</span>
          </div>
          <a href="https://github.com/tw93/Pake" className="font-bold text-sm">
            Github
          </a>
        </div>
        <div>
          <p className="font-bold text-3xl py-16">Pake Store</p>
        </div>
        <div className="container mx-auto items-center grid 2xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-4">
          {items.map((item) => {
            return (
              <div
                className="flex flex-col items-center bg-white/[8%] p-16 rounded-lg space-y-4 border border-white/5 hover:border-transparent hover:bg-white/5 ease-in-out duration-300"
                key={item.name_mac}
              >
                <img
                  src={`https://github.com/tw93/Pake/blob/master/src-tauri/png/${item.name_linux}_512.png?raw=true`}
                  className="w-32 h-32"
                />
                <p className="font-bold text-lg">{item.name_mac}</p>
                <a
                  className="bg-white/5 px-4 py-2 rounded-lg"
                  href={getDownloadUrl(os, item)}
                >
                  Download {os} App
                </a>
                <div className="text-white/30 space-x-2">
                  {["Mac", "Windows", "Linux"].map((os) => {
                    return (
                      <a
                        href={getDownloadUrl(os, item)}
                        className="hover:bg-white/20 p-1 rounded"
                        key={os}
                      >
                        {os}
                      </a>
                    );
                  })}
                </div>
              </div>
            );
          })}
        </div>
      </main>
    </>
  );
}

function getDownloadUrl(os: string, item: PakeItem) {
  switch (os) {
    case "Windows":
      return `https://github.com/tw93/Pake/releases/latest/download/${item.name_mac}.dmg`;
    case "Mac":
      return `https://github.com/tw93/Pake/releases/latest/download/${item.name_mac}.dmg`;
    case "Linux":
      return `https://github.com/tw93/Pake/releases/latest/download/${item.name_linux}.dmg`;
    default:
      return "";
  }
}

function getOS() {
  if (navigator.userAgent.indexOf("Window") > 0) {
    return "Windows";
  } else if (navigator.userAgent.indexOf("Mac OS X") > 0) {
    return "Mac";
  } else if (navigator.userAgent.indexOf("Linux") > 0) {
    return "Linux";
  } else {
    return "NUll";
  }
}
